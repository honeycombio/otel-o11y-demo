global
  maxconn 256
  log otel-collector:54526 local0

defaults
  mode http
  timeout client 10s
  timeout connect 10s
  timeout server 10s
  timeout http-request 60s
  log global

frontend stats
  bind *:9090
  stats enable
  stats uri /
  stats refresh 10s

frontend waf
  bind :8080

  # The fields to log:
  # ci = client IP
  # cp = client port
  # Ts = timestamp
  # ft = frontend name
  # b = backend name
  # s = server name
  # TR = time to receive 1st byte
  # Tw = time spent waiting in queue
  # Tc = time spent to establish server connection
  # Tr = server response time
  # Ta = total active time of request
  # ST = status code
  # B = bytes read
  # CC = captured request cookie
  # CS = captured response cookie
  # ts = termination state code
  # ac = active connections
  # fc = frontend connections
  # bc = backend connections
  # sc = server connections
  # rc = number of retries
  # sq = connections queued for server
  # bq = requests processed before this one
  # capture.req.method = HTTP method
  # capture.req.hdr(0) = User-Agent
  # scheme://URL

  http-request set-header X-Scheme http
  http-request set-header X-Scheme https if { ssl_fc }

  declare capture request len 512
  http-request capture req.fhdr(User-Agent) id 0
  declare capture request len 5
  http-request capture req.hdr(X-Scheme) id 1
  declare capture request len 512
  http-request capture req.hdr(Host) id 2
  declare capture request len 55
  http-request capture req.hdr(traceparent) id 3

  http-request set-var(txn.traceparent) req.hdr(traceparent) if { req.hdr(traceparent) -m found }

  http-request set-var(txn.trace_id) uuid(4),regsub(\"^([^-]{8})-([^-]{4})-([^-]{4})-([^-]{4})-([^-]{12})$\",\"\1\2\3\4\5\")
  http-request set-var(txn.span_id) uuid(4),regsub(\"^([^-]{8})-([^-]{4})-([^-]{4})-([^-]{4})-([^-]{12})$\",\"\1\2\3\")

  http-request set-var(txn.trace_id) var(txn.traceparent),regsub(\"^[0-9]{2}-([0-9a-f]{32})-[0-9a-z]{16}-[0-9]{2}$\",\"\1\") if { var(txn.traceparent) -m found }
  http-request set-var(txn.parent_id) var(txn.traceparent),regsub(\"^[0-9]{2}-[0-9a-f]{32}-([0-9a-z]{16})-[0-9]{2}$\",\"\1\") if { var(txn.traceparent) -m found }

  unique-id-format 00-%[var(txn.trace_id)]-%[var(txn.span_id)]-01
  http-request set-header traceparent %[unique-id]
  http-request set-var(txn.quote) str(\\\")
  http-request set-var(txn.whitespace) str("\ ")

  http-request set-var(txn.parent_id_str) var(txn.quote),concat(,,has_parent),concat(,txn.quote),concat(,,:),concat(,,false)
  http-request set-var(txn.parent_id_str) var(txn.quote),concat(,,trace.parent_id),concat(,txn.quote),concat(,,:),concat(,txn.quote),concat(,txn.parent_id),concat(,txn.quote) if { var(txn.parent_id) -m found }

  # log-format "%ci|%cp|%Ts|%ft|%b|%s|%TR|%Tw|%Tc|%Tr|%Ta|%ST|%B|%CC|%CS|%ts|%ac|%fc|%bc|%sc|%rc|%sq|%bq|%[capture.req.method]|%[capture.req.hdr(0)]|%[capture.req.hdr(1)]://%[capture.req.hdr(2)]%HP|%ID|%[capture.res.hdr(0)]"
  log-format "{\"incoming-traceparent\":\"%[capture.req.hdr(3)]\", \"appname\":\"haproxy\", \"service.name\":\"%ft\", %[var(txn.parent_id_str)], \"trace.trace_id\":\"%[var(txn.trace_id)]\", \"trace.span_id\":\"%[var(txn.span_id)]\", \"client_ip\":\"%ci\", \"client_port\":%cp, \"request_date_time\":\"%tr\", \"frontend\":\"%ft\", \"backend\":\"%b\", \"servername\":\"%s\", \"first_byte_time\":%TR, \"queue_wait_time\":%Tw, \"server_conn_time\":%Tc, \"server_response_time\":%Tr, \"total_request_time\":%Ta, \"http.status_code\":%ST, \"http.response.content_length\":%B, \"http.method\":\"%[capture.req.method]\", \"user_agent\":\"%[capture.req.hdr(0)]\", \"http.url\":\"%[capture.req.hdr(1)]://%[capture.req.hdr(2)]%HP\", \"traceparent\":\"%ID\"}"

  default_backend web

backend web
  server s1 web:80 check
